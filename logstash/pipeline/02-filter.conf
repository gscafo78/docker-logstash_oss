# Filter Section
filter {

#PyRDP
  if [type] == "PyRDP" {

    date {
      match => [ "timestamp", "ISO8601" ]
      timezone => "UTC"
      target => "@timestamp"
    }
    mutate {
      rename => {
        "clientIp" => "src_ip"
        "clientPort" => "src_port"
        "credentials_attempt" => "password"
      }
      add_field => {
        "dest_port" => 3389
      }
    }

  }


# Cowrie
  if [type] == "Cowrie" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    mutate {
      rename => {
        "dst_port" => "dest_port"
        "dst_ip" => "dest_ip"
      }
      add_field => {
          "dwlfile" => "%{shasum}"
        }
    }
  }


# Dionaea
  if [type] == "Dionaea" {
    date {
      match => [ "timestamp", "ISO8601" ]
      timezone => "UTC"
      target => "@timestamp"
    }
    mutate {
      rename => {
        "dst_port" => "dest_port"
        "dst_ip" => "dest_ip"
      }
      gsub => [
        "src_ip", "::ffff:", "",
        "dest_ip", "::ffff:", ""
      ]
    }
    if [credentials] {
      mutate {
        add_field => {
          "username" => "%{[credentials][username]}"
          "password" => "%{[credentials][password]}"
        }
        remove_field => "[credentials]"
      }
    }
  }

# Fatt
  if [type] == "Fatt" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    mutate {
      rename => {
        "sourceIp" => "src_ip"
        "destinationIp" => "dest_ip"
        "sourcePort" => "src_port"
        "destinationPort" => "dest_port"
        "gquic" => "fatt_gquic"
        "http" => "fatt_http"
        "rdp" => "fatt_rdp"
        "ssh" => "fatt_ssh"
        "tls" => "fatt_tls"
      }
    }
  }

# Suricata
  if [type] == "Suricata" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    translate {
      refresh_interval => 86400
      source => "[alert][signature_id]"
      target => "[alert][cve_id]"
      dictionary_path => "/opt/mpot/etc/listbot/cve.yaml"
#      fallback => "-"
    }
  }

# P0f
if [type] == "P0f" {
  date {
    match => [ "timestamp", "yyyy'/'MM'/'dd HH:mm:ss" ]
    remove_field => ["timestamp"]
  }
  mutate {
    rename => {
      "server_port" => "dest_port"
      "server_ip" => "dest_ip"
      "client_port" => "src_port"
      "client_ip" => "src_ip"
    }
  }
  mutate {
    gsub => ["os", "\?\?\?", "unk"]
  }
}

# Honeypots
  if [type] == "Honeypots" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }

# Tanner
  if [type] == "Tanner" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    mutate {
      rename => {
        "[peer][ip]" => "src_ip"
        "[peer][port]" => "src_port"
      }
      add_field => { "dest_port" => "80" }
    }
  }


# Drop if parse fails
  cidr {
        add_tag => [ "_dropit" ]
        address => [ "%{src_ip}" ]
        network => [ "172.16.130.0/24", "10.210.28.0/22" ]
      }
  if "_grokparsefailure" in [tags] { drop {} }
  if "_jsonparsefailure" in [tags] { drop {} }
  if "_dropit" in [tags] { drop {} }

  mutate {
    add_field => {
          "m-pot_ip_ext" => "${MY_EXTIP}"
          "m-pot_ip_int" => "${MY_INTIP}"
          "m-pot_ip_hostname" => "${MY_HOSTNAME}"
    }
  }


# Add geo coordinates / ASN info / IP rep.
  if [src_ip] {
    geoip {
      cache_size => 10000
      source => "src_ip"
      default_database_type => "City"
      target => "geoip"
#      database => "/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/logstash-filter-geoip-7.2.12-java/vendor/GeoLite2-City.mmdb"
    }
    geoip {
      cache_size => 10000
      source => "src_ip"
      default_database_type => "ASN"
      target => "geoip"
#      database => "/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/logstash-filter-geoip-7.2.12-java/vendor/GeoLite2-ASN.mmdb"
    }
    translate {
      refresh_interval => 86400
      source => "src_ip"
      target => "ip_rep"
      dictionary_path => "/opt/mpot/etc/listbot/iprep.yaml"
    }
  }
  if [m-pot_ip_ext]  {
    geoip {
      cache_size => 10000
      source => "m-pot_ip_ext"
      target => "geoip_ext"
      default_database_type => "City"
#      database => "/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/logstash-filter-geoip-7.2.12-java/vendor/GeoLite2-City.mmdb"
    }
    geoip {
      cache_size => 10000
      source => "m-pot_ip_ext"
      target => "geoip_ext"
      default_database_type => "ASN"
#      database => "/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/logstash-filter-geoip-7.2.12-java/vendor/GeoLite2-ASN.mmdb"
    }
  }

# In some rare conditions dest_port, src_port, status are indexed as string, forcing integer for now
  if [dest_port] {
    mutate {
        convert => { "dest_port" => "integer" }
    }
  }
  if [src_port] {
    mutate {
        convert => { "src_port" => "integer" }
    }
  }
  if [status] {
    mutate {
        convert => { "status" => "integer" }
    }
  }
  if [id] {
    mutate {
        convert => { "id" => "string" }
    }
  }
  if [request] {
    mutate {
        convert => { "request" => "string" }
    }
  }
}


